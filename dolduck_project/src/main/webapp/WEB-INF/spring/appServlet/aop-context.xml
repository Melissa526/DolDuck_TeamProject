<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<context:component-scan base-package="com.my.test"></context:component-scan>
	<bean name="logAop" class="com.my.test.common.aop.LogAop"></bean>
			<aop:config><!-- Dao가 가진 어떤 메소드를 호출하던 실행된다. -->
			<aop:pointcut expression="execution(public * com.my.test.freeboard.dao.*Dao*.*(..))" id="daoPoint" />
			<aop:aspect id="logAop" ref="logAop">
				<aop:before method="before" pointcut-ref="daoPoint" />
				<aop:after method="after" pointcut-ref="daoPoint" />
				<aop:after-throwing method="afterThrowing" pointcut-ref="daoPoint" />
			</aop:aspect>
		</aop:config>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
</beans>
